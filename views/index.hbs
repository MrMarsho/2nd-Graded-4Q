<!DOCTYPE html>
<html lang="en">
<head>
    <title> To-do List Sample </title>
    <meta name="author" content="Aline Mendoza" />
    <meta name="date" content="04/21/2025" />
    <meta name="revised" content="04/21/2025" />
    <meta name="description" content="Application of CRUD on todo list" />
    <meta name="keyword" content="arrays, objects, insertRow. insertCell, JSON" />
    <link rel="stylesheet" href="styles.css" >  
</head>
 <body>
     <div class="container">
        <h1>Enhanced To-Do List</h1>
        <form id="todoForm" action="/save" method="post" onsubmit="return prepareID()">
            <input id="taskNumber" name="taskNumber" placeholder="Task Number" style="display:none" />
            <input type="text" id="taskDescription" name="taskDescription"  placeholder="Task Description" required />
            <input type="date" id="taskDate" name="taskDate" placeholder="When Needed" required />
            <select id="taskStatus" name="taskStatus" required>
                <option value="New" selected>New</option>
                <option value="On Going">On Going</option>
                <option value="On Hold">On Hold</option>
                <option value="Done">Done</option>
            </select>
            <button>Save/Update Task</button>
        </form>
        <table id="todoTable">
            <thead>
                <tr>
                    <th>Task Number</th>
                    <th>Description</th>
                    <th>Due Date</th>
                    <th>Status</th>
                    <th colspan="2">Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Task rows will be dynamically created or inserted here -->
                
            </tbody>
        </table>
    </div>
    <footer>
      Copyright &copy; AL Mendoza<br/>
      HTML and CSS was generated by Co-pilot 4/21/2025
    </footer>
    <script>
       // you could use the functions below or create your own.
      
       // this will be used to determine if taskNumber will be generated
       // for new to do task.
       function prepareID() {
        retValue = false;
         if (confirm("Accept?")) {
           if (!taskNumber.value) { // this will determine if a new task Number is needed (for creating) or not (for updating)
               const timestamp = new Date().valueOf(); // the timestamp is the task Number because it is always unigue
               taskNumber.value = timestamp;
           }
           console.log(taskNumber.value)
           retValue = true;
         }
         return retValue; // value depends if the user cancelled or proceeded in the form submission
       }
      
       // this function could be used to placed the todo task in the form for editing.
       function getData(tID) {
         taskNumber.value = document.getElementById("taskID"+tID).textContent;
         taskDescription.value = document.getElementById("desc"+tID).textContent;
         taskDate.value = document.getElementById("date"+tID).textContent.trim();
         statusValue = document.getElementById("status"+tID).textContent.trim();
         document.getElementById("taskStatus").value = statusValue;
       }
    </script>
</body>
</html>
